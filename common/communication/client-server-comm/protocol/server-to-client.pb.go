// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/client-server-messages/server-to-client.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageStatus int32

const (
	MessageStatus_SUCCESS MessageStatus = 0
	MessageStatus_ERROR   MessageStatus = 1
	MessageStatus_PENDING MessageStatus = 2
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
		2: "PENDING",
	}
	MessageStatus_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
		"PENDING": 2,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_server_messages_server_to_client_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_proto_client_server_messages_server_to_client_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{0}
}

type Request_Query_QueryType int32

const (
	Request_Query_QUERY_1 Request_Query_QueryType = 0
	Request_Query_QUERY_2 Request_Query_QueryType = 1
	Request_Query_QUERY_3 Request_Query_QueryType = 2
	Request_Query_QUERY_4 Request_Query_QueryType = 3
	Request_Query_QUERY_5 Request_Query_QueryType = 4
)

// Enum value maps for Request_Query_QueryType.
var (
	Request_Query_QueryType_name = map[int32]string{
		0: "QUERY_1",
		1: "QUERY_2",
		2: "QUERY_3",
		3: "QUERY_4",
		4: "QUERY_5",
	}
	Request_Query_QueryType_value = map[string]int32{
		"QUERY_1": 0,
		"QUERY_2": 1,
		"QUERY_3": 2,
		"QUERY_4": 3,
		"QUERY_5": 4,
	}
)

func (x Request_Query_QueryType) Enum() *Request_Query_QueryType {
	p := new(Request_Query_QueryType)
	*p = x
	return p
}

func (x Request_Query_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request_Query_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_server_messages_server_to_client_proto_enumTypes[1].Descriptor()
}

func (Request_Query_QueryType) Type() protoreflect.EnumType {
	return &file_proto_client_server_messages_server_to_client_proto_enumTypes[1]
}

func (x Request_Query_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request_Query_QueryType.Descriptor instead.
func (Request_Query_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{2, 0, 0}
}

type BatchAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Status        MessageStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAck) Reset() {
	*x = BatchAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAck) ProtoMessage() {}

func (x *BatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAck.ProtoReflect.Descriptor instead.
func (*BatchAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{0}
}

func (x *BatchAck) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchAck) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

type SyncAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAck) Reset() {
	*x = SyncAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAck) ProtoMessage() {}

func (x *SyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAck.ProtoReflect.Descriptor instead.
func (*SyncAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{1}
}

func (x *SyncAck) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        MessageStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	Responses     []*Request_Query       `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

func (x *Request) GetResponses() []*Request_Query {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ServerClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerClientMessage_BatchAck
	//	*ServerClientMessage_SyncAck
	//	*ServerClientMessage_Request
	Message       isServerClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerClientMessage) Reset() {
	*x = ServerClientMessage{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerClientMessage) ProtoMessage() {}

func (x *ServerClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerClientMessage.ProtoReflect.Descriptor instead.
func (*ServerClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{3}
}

func (x *ServerClientMessage) GetMessage() isServerClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerClientMessage) GetBatchAck() *BatchAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_BatchAck); ok {
			return x.BatchAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetSyncAck() *SyncAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_SyncAck); ok {
			return x.SyncAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetRequest() *Request {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_Request); ok {
			return x.Request
		}
	}
	return nil
}

type isServerClientMessage_Message interface {
	isServerClientMessage_Message()
}

type ServerClientMessage_BatchAck struct {
	BatchAck *BatchAck `protobuf:"bytes,1,opt,name=batch_ack,json=batchAck,proto3,oneof"`
}

type ServerClientMessage_SyncAck struct {
	SyncAck *SyncAck `protobuf:"bytes,2,opt,name=sync_ack,json=syncAck,proto3,oneof"`
}

type ServerClientMessage_Request struct {
	Request *Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

func (*ServerClientMessage_BatchAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_SyncAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_Request) isServerClientMessage_Message() {}

type Request_Query struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Type          Request_Query_QueryType `protobuf:"varint,1,opt,name=type,proto3,enum=Request_Query_QueryType" json:"type,omitempty"`
	Message       string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_Query) Reset() {
	*x = Request_Query{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Query) ProtoMessage() {}

func (x *Request_Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Query.ProtoReflect.Descriptor instead.
func (*Request_Query) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Request_Query) GetType() Request_Query_QueryType {
	if x != nil {
		return x.Type
	}
	return Request_Query_QUERY_1
}

func (x *Request_Query) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_client_server_messages_server_to_client_proto protoreflect.FileDescriptor

const file_proto_client_server_messages_server_to_client_proto_rawDesc = "" +
	"\n" +
	"3proto/client-server-messages/server-to-client.proto\"M\n" +
	"\bBatchAck\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.MessageStatusR\x06status\"&\n" +
	"\aSyncAck\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\xff\x01\n" +
	"\aRequest\x12&\n" +
	"\x06status\x18\x01 \x01(\x0e2\x0e.MessageStatusR\x06status\x12,\n" +
	"\tresponses\x18\x02 \x03(\v2\x0e.Request.QueryR\tresponses\x1a\x9d\x01\n" +
	"\x05Query\x12,\n" +
	"\x04type\x18\x01 \x01(\x0e2\x18.Request.Query.QueryTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"L\n" +
	"\tQueryType\x12\v\n" +
	"\aQUERY_1\x10\x00\x12\v\n" +
	"\aQUERY_2\x10\x01\x12\v\n" +
	"\aQUERY_3\x10\x02\x12\v\n" +
	"\aQUERY_4\x10\x03\x12\v\n" +
	"\aQUERY_5\x10\x04\"\x97\x01\n" +
	"\x13ServerClientMessage\x12(\n" +
	"\tbatch_ack\x18\x01 \x01(\v2\t.BatchAckH\x00R\bbatchAck\x12%\n" +
	"\bsync_ack\x18\x02 \x01(\v2\b.SyncAckH\x00R\asyncAck\x12$\n" +
	"\arequest\x18\x03 \x01(\v2\b.RequestH\x00R\arequestB\t\n" +
	"\amessage*4\n" +
	"\rMessageStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01\x12\v\n" +
	"\aPENDING\x10\x02B2Z0common/communication/client-server-comm/protocolb\x06proto3"

var (
	file_proto_client_server_messages_server_to_client_proto_rawDescOnce sync.Once
	file_proto_client_server_messages_server_to_client_proto_rawDescData []byte
)

func file_proto_client_server_messages_server_to_client_proto_rawDescGZIP() []byte {
	file_proto_client_server_messages_server_to_client_proto_rawDescOnce.Do(func() {
		file_proto_client_server_messages_server_to_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_server_to_client_proto_rawDesc), len(file_proto_client_server_messages_server_to_client_proto_rawDesc)))
	})
	return file_proto_client_server_messages_server_to_client_proto_rawDescData
}

var file_proto_client_server_messages_server_to_client_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_client_server_messages_server_to_client_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_client_server_messages_server_to_client_proto_goTypes = []any{
	(MessageStatus)(0),           // 0: MessageStatus
	(Request_Query_QueryType)(0), // 1: Request.Query.QueryType
	(*BatchAck)(nil),             // 2: BatchAck
	(*SyncAck)(nil),              // 3: SyncAck
	(*Request)(nil),              // 4: Request
	(*ServerClientMessage)(nil),  // 5: ServerClientMessage
	(*Request_Query)(nil),        // 6: Request.Query
}
var file_proto_client_server_messages_server_to_client_proto_depIdxs = []int32{
	0, // 0: BatchAck.status:type_name -> MessageStatus
	0, // 1: Request.status:type_name -> MessageStatus
	6, // 2: Request.responses:type_name -> Request.Query
	2, // 3: ServerClientMessage.batch_ack:type_name -> BatchAck
	3, // 4: ServerClientMessage.sync_ack:type_name -> SyncAck
	4, // 5: ServerClientMessage.request:type_name -> Request
	1, // 6: Request.Query.type:type_name -> Request.Query.QueryType
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_client_server_messages_server_to_client_proto_init() }
func file_proto_client_server_messages_server_to_client_proto_init() {
	if File_proto_client_server_messages_server_to_client_proto != nil {
		return
	}
	file_proto_client_server_messages_server_to_client_proto_msgTypes[3].OneofWrappers = []any{
		(*ServerClientMessage_BatchAck)(nil),
		(*ServerClientMessage_SyncAck)(nil),
		(*ServerClientMessage_Request)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_server_to_client_proto_rawDesc), len(file_proto_client_server_messages_server_to_client_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_client_server_messages_server_to_client_proto_goTypes,
		DependencyIndexes: file_proto_client_server_messages_server_to_client_proto_depIdxs,
		EnumInfos:         file_proto_client_server_messages_server_to_client_proto_enumTypes,
		MessageInfos:      file_proto_client_server_messages_server_to_client_proto_msgTypes,
	}.Build()
	File_proto_client_server_messages_server_to_client_proto = out.File
	file_proto_client_server_messages_server_to_client_proto_goTypes = nil
	file_proto_client_server_messages_server_to_client_proto_depIdxs = nil
}
