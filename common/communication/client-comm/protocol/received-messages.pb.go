// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/messages/received-messages.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageStatus int32

const (
	MessageStatus_SUCCESS MessageStatus = 0
	MessageStatus_ERROR   MessageStatus = 1
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	MessageStatus_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_received_messages_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_proto_messages_received_messages_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{0}
}

type RequestResponse_RequestType int32

const (
	RequestResponse_QUERY_1 RequestResponse_RequestType = 0
	RequestResponse_QUERY_2 RequestResponse_RequestType = 1
	RequestResponse_QUERY_3 RequestResponse_RequestType = 2
	RequestResponse_QUERY_4 RequestResponse_RequestType = 3
	RequestResponse_QUERY_5 RequestResponse_RequestType = 4
)

// Enum value maps for RequestResponse_RequestType.
var (
	RequestResponse_RequestType_name = map[int32]string{
		0: "QUERY_1",
		1: "QUERY_2",
		2: "QUERY_3",
		3: "QUERY_4",
		4: "QUERY_5",
	}
	RequestResponse_RequestType_value = map[string]int32{
		"QUERY_1": 0,
		"QUERY_2": 1,
		"QUERY_3": 2,
		"QUERY_4": 3,
		"QUERY_5": 4,
	}
)

func (x RequestResponse_RequestType) Enum() *RequestResponse_RequestType {
	p := new(RequestResponse_RequestType)
	*p = x
	return p
}

func (x RequestResponse_RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestResponse_RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_received_messages_proto_enumTypes[1].Descriptor()
}

func (RequestResponse_RequestType) Type() protoreflect.EnumType {
	return &file_proto_messages_received_messages_proto_enumTypes[1]
}

func (x RequestResponse_RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestResponse_RequestType.Descriptor instead.
func (RequestResponse_RequestType) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{2, 0}
}

type BatchAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Status        MessageStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAck) Reset() {
	*x = BatchAck{}
	mi := &file_proto_messages_received_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAck) ProtoMessage() {}

func (x *BatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_received_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAck.ProtoReflect.Descriptor instead.
func (*BatchAck) Descriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{0}
}

func (x *BatchAck) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchAck) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

type SyncAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAck) Reset() {
	*x = SyncAck{}
	mi := &file_proto_messages_received_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAck) ProtoMessage() {}

func (x *SyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_received_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAck.ProtoReflect.Descriptor instead.
func (*SyncAck) Descriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SyncAck) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type RequestResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Type          RequestResponse_RequestType `protobuf:"varint,1,opt,name=type,proto3,enum=RequestResponse_RequestType" json:"type,omitempty"`
	Message       string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestResponse) Reset() {
	*x = RequestResponse{}
	mi := &file_proto_messages_received_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestResponse) ProtoMessage() {}

func (x *RequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_received_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestResponse.ProtoReflect.Descriptor instead.
func (*RequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{2}
}

func (x *RequestResponse) GetType() RequestResponse_RequestType {
	if x != nil {
		return x.Type
	}
	return RequestResponse_QUERY_1
}

func (x *RequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResponseMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ResponseMessage_BatchAck
	//	*ResponseMessage_SyncAck
	//	*ResponseMessage_Request
	Message       isResponseMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseMessage) Reset() {
	*x = ResponseMessage{}
	mi := &file_proto_messages_received_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMessage) ProtoMessage() {}

func (x *ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_received_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMessage.ProtoReflect.Descriptor instead.
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return file_proto_messages_received_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseMessage) GetMessage() isResponseMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ResponseMessage) GetBatchAck() *BatchAck {
	if x != nil {
		if x, ok := x.Message.(*ResponseMessage_BatchAck); ok {
			return x.BatchAck
		}
	}
	return nil
}

func (x *ResponseMessage) GetSyncAck() *SyncAck {
	if x != nil {
		if x, ok := x.Message.(*ResponseMessage_SyncAck); ok {
			return x.SyncAck
		}
	}
	return nil
}

func (x *ResponseMessage) GetRequest() *RequestResponse {
	if x != nil {
		if x, ok := x.Message.(*ResponseMessage_Request); ok {
			return x.Request
		}
	}
	return nil
}

type isResponseMessage_Message interface {
	isResponseMessage_Message()
}

type ResponseMessage_BatchAck struct {
	BatchAck *BatchAck `protobuf:"bytes,1,opt,name=batch_ack,json=batchAck,proto3,oneof"`
}

type ResponseMessage_SyncAck struct {
	SyncAck *SyncAck `protobuf:"bytes,2,opt,name=sync_ack,json=syncAck,proto3,oneof"`
}

type ResponseMessage_Request struct {
	Request *RequestResponse `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

func (*ResponseMessage_BatchAck) isResponseMessage_Message() {}

func (*ResponseMessage_SyncAck) isResponseMessage_Message() {}

func (*ResponseMessage_Request) isResponseMessage_Message() {}

var File_proto_messages_received_messages_proto protoreflect.FileDescriptor

const file_proto_messages_received_messages_proto_rawDesc = "" +
	"\n" +
	"&proto/messages/received-messages.proto\"M\n" +
	"\bBatchAck\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.MessageStatusR\x06status\"&\n" +
	"\aSyncAck\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\xad\x01\n" +
	"\x0fRequestResponse\x120\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1c.RequestResponse.RequestTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"N\n" +
	"\vRequestType\x12\v\n" +
	"\aQUERY_1\x10\x00\x12\v\n" +
	"\aQUERY_2\x10\x01\x12\v\n" +
	"\aQUERY_3\x10\x02\x12\v\n" +
	"\aQUERY_4\x10\x03\x12\v\n" +
	"\aQUERY_5\x10\x04\"\x9b\x01\n" +
	"\x0fResponseMessage\x12(\n" +
	"\tbatch_ack\x18\x01 \x01(\v2\t.BatchAckH\x00R\bbatchAck\x12%\n" +
	"\bsync_ack\x18\x02 \x01(\v2\b.SyncAckH\x00R\asyncAck\x12,\n" +
	"\arequest\x18\x03 \x01(\v2\x10.RequestResponseH\x00R\arequestB\t\n" +
	"\amessage*'\n" +
	"\rMessageStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01B+Z)common/communication/client-comm/protocolb\x06proto3"

var (
	file_proto_messages_received_messages_proto_rawDescOnce sync.Once
	file_proto_messages_received_messages_proto_rawDescData []byte
)

func file_proto_messages_received_messages_proto_rawDescGZIP() []byte {
	file_proto_messages_received_messages_proto_rawDescOnce.Do(func() {
		file_proto_messages_received_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_messages_received_messages_proto_rawDesc), len(file_proto_messages_received_messages_proto_rawDesc)))
	})
	return file_proto_messages_received_messages_proto_rawDescData
}

var file_proto_messages_received_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_messages_received_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_messages_received_messages_proto_goTypes = []any{
	(MessageStatus)(0),               // 0: MessageStatus
	(RequestResponse_RequestType)(0), // 1: RequestResponse.RequestType
	(*BatchAck)(nil),                 // 2: BatchAck
	(*SyncAck)(nil),                  // 3: SyncAck
	(*RequestResponse)(nil),          // 4: RequestResponse
	(*ResponseMessage)(nil),          // 5: ResponseMessage
}
var file_proto_messages_received_messages_proto_depIdxs = []int32{
	0, // 0: BatchAck.status:type_name -> MessageStatus
	1, // 1: RequestResponse.type:type_name -> RequestResponse.RequestType
	2, // 2: ResponseMessage.batch_ack:type_name -> BatchAck
	3, // 3: ResponseMessage.sync_ack:type_name -> SyncAck
	4, // 4: ResponseMessage.request:type_name -> RequestResponse
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_messages_received_messages_proto_init() }
func file_proto_messages_received_messages_proto_init() {
	if File_proto_messages_received_messages_proto != nil {
		return
	}
	file_proto_messages_received_messages_proto_msgTypes[3].OneofWrappers = []any{
		(*ResponseMessage_BatchAck)(nil),
		(*ResponseMessage_SyncAck)(nil),
		(*ResponseMessage_Request)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_messages_received_messages_proto_rawDesc), len(file_proto_messages_received_messages_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_messages_received_messages_proto_goTypes,
		DependencyIndexes: file_proto_messages_received_messages_proto_depIdxs,
		EnumInfos:         file_proto_messages_received_messages_proto_enumTypes,
		MessageInfos:      file_proto_messages_received_messages_proto_msgTypes,
	}.Build()
	File_proto_messages_received_messages_proto = out.File
	file_proto_messages_received_messages_proto_goTypes = nil
	file_proto_messages_received_messages_proto_depIdxs = nil
}
